-- public.testigos_materialized_view source

CREATE MATERIALIZED VIEW public.testigos_materialized_view
TABLESPACE pg_default
AS SELECT row_number() OVER (ORDER BY (( SELECT NULL::text AS text))) AS id,
    table_id,
    portal_inmobiliario,
    tipo_operacion,
    latitud,
    longitud,
    precio,
    m2,
    COALESCE(round(precio::numeric / NULLIF(m2::numeric, 0.0), 2), 0::numeric) AS precio_m2,
        CASE
            WHEN tipo_inmueble::text = 'Sin anejos'::text THEN 'Pisos'::character varying
            WHEN tipo_inmueble::text = 'Con anejos'::text THEN 'Pisos'::character varying
            WHEN tipo_inmueble::text = 'Adosada'::text THEN 'Casa'::character varying
            WHEN tipo_inmueble::text = 'Aislada'::text THEN 'Casa'::character varying
            WHEN tipo_inmueble::text = 'Local comercial'::text THEN 'Local'::character varying
            WHEN tipo_inmueble::text = 'Nave industrial'::text THEN 'Nave'::character varying
            ELSE tipo_inmueble
        END AS tipo_inmueble,
    res_terciario,
    habitaciones,
    banios,
    planta,
    trastero,
    garaje,
    piscina,
    ac,
    ascensor,
    terraza,
    jardin,
    descripcion,
    acabados,
    cerramientos,
    estado_conservacion,
    es_agencia,
    provincial,
    localidad,
    codigo_postal,
    distrito,
    vecindario,
    fecha_creacion,
    fecha_actualizacion,
    fecha_creacion_betipo,
    fecha_actualizacion_betipo,
    fecha_publicacion,
    activo,
    url_propiedad,
    url_imagen,
    testigo_cierre,
    es_borrador,
    ubicacion,
    actualizado,
    testigo_error,
    testigo_razon,
    id_testigo_padre,
    embedding,
    embedding_habitaciones_banios
   FROM ( SELECT t.id AS table_id,
            t.portal_inmobiliario,
            t.tipo_operacion,
            t.latitud,
            t.longitud,
            t.precio,
            t.m2,
            t.tipo_inmueble,
            t.res_terciario,
            COALESCE(t.habitaciones, 0) AS habitaciones,
            COALESCE(t.banios, 0) AS banios,
            COALESCE(t.planta, 0) AS planta,
            t.trastero,
            t.garaje,
            t.piscina,
            t.ac,
            t.ascensor,
            t.terraza,
            t.jardin,
            t.descripcion,
            t.acabados,
            t.cerramientos,
            t.estado_conservacion,
            t.es_agencia,
            t.provincial,
            t.localidad,
            t.codigo_postal,
            t.distrito,
            t.vecindario,
            t.fecha_creacion,
            t.fecha_actualizacion,
            t.fecha_creacion_betipo,
            t.fecha_actualizacion_betipo,
            t.fecha_creacion AS fecha_publicacion,
            true AS activo,
            t.url_propiedad,
            t.url_imagen,
            false AS testigo_cierre,
            t.es_borrador,
            t.ubicacion,
            NULL::boolean AS actualizado,
            NULL::boolean AS testigo_error,
            NULL::character varying AS testigo_razon,
            NULL::bigint AS id_testigo_padre,
            edhb.embedding AS embedding_habitaciones_banios,
            edc.embedding
           FROM testigos t
             LEFT JOIN embedding_dict_habitaciones_banios edhb ON edhb.habitaciones = t.habitaciones AND edhb.banios = t.banios
             LEFT JOIN embedding_dict_caracteristicas edc ON edc.trastero = t.trastero AND edc.garaje = t.garaje AND edc.piscina = t.piscina AND edc.ac = t.ac AND edc.ascensor = t.ascensor AND edc.terraza = t.terraza AND edc.jardin = t.jardin
          WHERE t.precio > 5000::double precision AND t.tipo_operacion::text = 'venta'::text
        UNION ALL
         SELECT ti.id AS table_id,
            ti.portal_inmobiliario,
            ti.tipo_operacion,
            ti.latitud,
            ti.longitud,
            ti.precio,
            ti.m2,
            ti.tipo_inmueble,
            ti.res_terciario,
            COALESCE(ti.habitaciones, 0) AS habitaciones,
            COALESCE(ti.banios, 0) AS banios,
            COALESCE(ti.planta, 0) AS planta,
            ti.trastero,
            ti.garaje,
            ti.piscina,
            ti.ac,
            ti.ascensor,
            ti.terraza,
            ti.jardin,
            ti.descripcion,
            ti.acabados,
            ti.cerramientos,
            ti.estado_conservacion,
            ti.es_agencia,
            ti.provincial,
            ti.localidad,
            ti.codigo_postal,
            ti.distrito,
            ti.vecindario,
            ti.fecha_creacion,
            ti.fecha_actualizacion,
            ti.fecha_creacion_betipo,
            ti.fecha_actualizacion_betipo,
            COALESCE(ti.fecha_creacion) AS fecha_publicacion,
            false AS activo,
            ti.url_propiedad,
            ti.url_imagen,
            false AS testigo_cierre,
            ti.es_borrador,
            ti.ubicacion,
            ti.actualizado,
            ti.testigo_error,
            ti.testigo_error_razon AS testigo_razon,
            ti.id_testigo_padre,
            edhb.embedding AS embedding_habitaciones_banios,
            edc.embedding
           FROM testigos_inactivos ti
             LEFT JOIN embedding_dict_habitaciones_banios edhb ON edhb.habitaciones = ti.habitaciones AND edhb.banios = ti.banios
             LEFT JOIN embedding_dict_caracteristicas edc ON edc.trastero = ti.trastero AND edc.garaje = ti.garaje AND edc.piscina = ti.piscina AND edc.ac = ti.ac AND edc.ascensor = ti.ascensor AND edc.terraza = ti.terraza AND edc.jardin = ti.jardin
          WHERE ti.precio > 5000::double precision AND ti.tipo_operacion::text = 'venta'::text AND ti.actualizado = false AND ti.okupado = false
        UNION ALL
         SELECT testigos_cierre.id AS table_id,
            testigos_cierre.portal_inmobiliario,
            'venta'::text AS tipo_operacion,
            testigos_cierre.latitud,
            testigos_cierre.longitud,
            testigos_cierre.precio,
            testigos_cierre.m2,
            testigos_cierre.tipo_inmueble,
            NULL::character varying AS res_terciario,
            0 AS habitaciones,
            0 AS banios,
            0 AS planta,
            false AS trastero,
            false AS garaje,
            false AS piscina,
            false AS ac,
            false AS ascensor,
            false AS terraza,
            false AS jardin,
            NULL::text AS descripcion,
            NULL::text AS acabados,
            NULL::text AS cerramientos,
            NULL::character varying AS estado_conservacion,
            NULL::boolean AS es_agencia,
            NULL::character varying AS provincial,
            NULL::character varying AS localidad,
            NULL::character varying AS codigo_postal,
            NULL::character varying AS distrito,
            NULL::character varying AS vecindario,
            NULL::date AS fecha_creacion,
            NULL::date AS fecha_actualizacion,
            NULL::date AS fecha_creacion_betipo,
            NULL::date AS fecha_actualizacion_betipo,
            NULL::date AS fecha_publicacion,
            true AS activo,
            NULL::text AS url_propiedad,
            NULL::text AS url_imagen,
            true AS testigo_cierre,
            NULL::boolean AS es_borrador,
            testigos_cierre.ubicacion::geometry AS ubicacion,
            NULL::boolean AS actualizado,
            NULL::boolean AS testigo_error,
            NULL::character varying AS testigo_razon,
            NULL::bigint AS id_testigo_padre,
            NULL::vector(64) AS embedding,
            NULL::vector(64) AS embedding_habitaciones_banios
           FROM testigos_cierre) unnamed_subquery
WITH DATA;

-- View indexes:
CREATE INDEX idx_testigos_mv_testigo_cierre ON public.testigos_materialized_view USING btree (testigo_cierre);
CREATE INDEX idx_testigos_mv_testigo_id ON public.testigos_materialized_view USING btree (id);
CREATE INDEX idx_testigos_mv_testigo_table_id ON public.testigos_materialized_view USING btree (table_id);
CREATE INDEX idx_testigos_mv_tipo_inmueble ON public.testigos_materialized_view USING btree (tipo_inmueble);
CREATE INDEX idx_testigos_mv_ubicacion_gist ON public.testigos_materialized_view USING gist (((ubicacion)::geography));